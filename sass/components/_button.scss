.btn {
  /* 
  - pseudo class to style element under special conditions
  - link: anchor element
  - visited: when user has already clicked on button once before & sees button again
  - padding: top & bottom, left & right if 2 values OR top, right, bottom, left if all 4
  */
  &:link,
  &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all 0.2s;
    position: relative;
    font-size: $default-font-size;
  }

  /* 
  - -ve to move up
  - x-shadow, y-shadow, blur, colour (4th number is opacity)
  */
  &:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba($color-black, 0.2);

    /*
    - only when hovered, do we want the pseudo element to grow in size (using scale)
    - use opacity: 0 to get something to fade out
    */
    &::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
    }
  }

  &:active {
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.2);
  }

  &--white {
    background-color: $color-white;
    color: $color-grey-dark;

    &::after {
      background-color: $color-white;
    }
  }

  /* 
  pseudo element - add element that looks exactly like the button we have but behind it
  - must have content & property
  - treated as a child of actual element - takes the dimensions
  - need to set position to be right under real button (use absolute - make actual button position relative)
  - z-index: defines the position of the elements if they are 1 on top of the other (-1 means under)
  - transition property goes on the initial state
  */
  &::after {
    content: '';
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;

    transition: all 0.4s;
  }

  /* animation-fill-mode: backwards -  applies styles at 0% keyframe animation before animation starts (0.75s delay) */
  &--animated {
    animation: moveInBottom 0.5s ease-out 0.75s;
    animation-fill-mode: backwards;
  }
}

.btn-text {
  &:link,
  &:visited {
    font-size: $default-font-size;
    color: $color-primary;
    display: inline-block;
    text-decoration: none;
    border-bottom: 1px solid $color-primary;
    padding: 3px;
    transition: all 0.2s;
  }

  &:hover {
    background-color: $color-primary;
    color: $color-white;
    box-shadow: 0 1rem 2rem rgba($color-black, 0.15);
    transform: translateY(-2px);
  }

  &:active {
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.15);
    transform: translateY(0);
  }
}
